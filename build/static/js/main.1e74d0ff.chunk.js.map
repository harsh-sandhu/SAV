{"version":3,"sources":["Components/Algorithm/MergeSort.js","Components/Algorithm/BubbleSort.js","Components/Algorithm/QuickSort.js","Components/Visuals/ArrayBar/ArrayBar.js","Components/Visuals/Visual.js","Components/Algorithm/InsertionSort.js","Components/Algorithm/SelectionSort.js","App.js","index.js","Components/Visuals/Visual.module.css"],"names":["getMergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","doMerge","getBubbleSortAnimations","arr","n","swap","console","log","bubbleSort","xp","yp","temp","getQuickSortAnimations","quickSort","items","leftIndex","rightIndex","left","right","index","pivotIndex","pivot","partition","ArrayBars","props","style","backgroundColor","unsortedColor","height","value","width","display","margin","marginTop","className","class","UNSORTED_COLOR","ACTIVE_COLOR","Visual","useState","setArray","number","setNumber","ANIMATION_SPEED_MS","setTime","change","setChange","screen","window","w","useEffect","insertionSort","inputArr","current","getInsertionSortAnimations","arrayBars","document","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","color","color1","setTimeout","newHeight","classes","arrayContainer","Bars","map","idx","ArrayBar","border","verticalAlign","sideBar","font","borderBottom","marginLeft","marginBottom","type","max","min","onChange","event","target","Input","placeholder","boxShadow","borderTop","fontSize","Button","onClick","random","tmp","selectionSort","getSelectionSortAnimations","SelectionSort","textDecoration","textAlign","fontWeight","href","App","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1e74d0ff.chunk.js","sourcesContent":["export function getMergeSortAnimations(array) {\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    const auxiliaryArray = array.slice();\r\n    mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n    return animations;\r\n  }\r\n  \r\n  function mergeSortHelper(\r\n    mainArray,\r\n    startIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations,\r\n  ) {\r\n    if (startIdx === endIdx) return;\r\n    const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n    mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n    mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n    doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n  }\r\n  \r\n  function doMerge(\r\n    mainArray,\r\n    startIdx,\r\n    middleIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations,\r\n  ) {\r\n    let k = startIdx;\r\n    let i = startIdx;\r\n    let j = middleIdx + 1;\r\n    while (i <= middleIdx && j <= endIdx) {\r\n      animations.push([i, j]);\r\n      animations.push([i, j]);\r\n      if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n        animations.push([k, auxiliaryArray[i]]);\r\n        mainArray[k++] = auxiliaryArray[i++];\r\n      } else {\r\n        animations.push([k, auxiliaryArray[j]]);\r\n        mainArray[k++] = auxiliaryArray[j++];\r\n      }\r\n    }\r\n    while (i <= middleIdx) {\r\n      animations.push([i, i]);\r\n      animations.push([i, i]);\r\n      animations.push([k, auxiliaryArray[i]]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    }\r\n    while (j <= endIdx) {\r\n      animations.push([j, j]);\r\n      animations.push([j, j]);\r\n      animations.push([k, auxiliaryArray[j]]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }\r\n  ","export function getBubbleSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  const auxiliaryArray = array.slice();\r\n  bubbleSort(array, array.length - 1, auxiliaryArray, animations);\r\n  console.log(auxiliaryArray + '\\n');\r\n  return animations;\r\n}\r\nfunction swap(arr, xp, yp) {\r\n  var temp = arr[xp];\r\n  arr[xp] = arr[yp];\r\n  arr[yp] = temp;\r\n}\r\n\r\n// An optimized version of Bubble Sort\r\nfunction bubbleSort(arr, n, auxiliaryArray, animations) {\r\n  var i, j;\r\n  for (i = 0; i <n; i++) {\r\n    for (j = 0; j <n - i; j++) {\r\n      animations.push([i, j]);\r\n      animations.push([i, j]);\r\n      if (auxiliaryArray[j] < auxiliaryArray[j + 1]) {\r\n        swap(auxiliaryArray, j, j + 1);\r\n        animations.push([i, auxiliaryArray[j + 1]]);\r\n      } else {\r\n        animations.push([i, auxiliaryArray[j + 1]]);\r\n      }\r\n    }\r\n  }\r\n  animations.push([i, j]);\r\n  animations.push([i, j]);\r\n  animations.push([i, auxiliaryArray[0]]);\r\n  console.log(animations[i]);\r\n}\r\n","export function getQuickSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  //   const auxiliaryArray = array.slice();\r\n  quickSort(array, 0, array.length-1, animations);\r\n  return animations;\r\n}\r\nfunction swap(items, leftIndex, rightIndex) {\r\n  var temp = items[leftIndex];\r\n  items[leftIndex] = items[rightIndex];\r\n  items[rightIndex] = temp;\r\n}\r\nfunction partition(items, left, right,animations) {\r\n  var pivotIndex=Math.floor((right + left) / 2);\r\n  var pivot = items[Math.floor((right + left) / 2)], //middle element\r\n    i = left, //left pointer\r\n    j = right; //right pointer\r\n  while (i <= j) {\r\n    animations.push([i, pivotIndex]);\r\n    animations.push([i, pivotIndex]);\r\n    animations.push([i, items[i]]);\r\n    while (items[i] < pivot) {\r\n      i++;\r\n    }\r\n    while (items[j] > pivot) {\r\n      j--;\r\n    }\r\n    if (i <= j) {\r\n      swap(items, i, j); //sawpping two elements\r\n      i++;\r\n      j--;\r\n    }\r\n  }\r\n  return i;\r\n}\r\n\r\nfunction quickSort(items, left, right, animations) {\r\n  var index;\r\n  if (items.length >=1) {\r\n    index = partition(items, left, right,animations); //index returned from partition\r\n    if (left < index - 1) {\r\n      //more elements on the left side of the pivot\r\n      quickSort(items, left, index - 1, animations);\r\n    }\r\n    if (index < right) {\r\n      //more elements on the right side of the pivot\r\n      quickSort(items, index, right, animations);\r\n    }\r\n    animations.push([left, index]);\r\n    animations.push([left, index]);\r\n    animations.push([index, items[index]]);\r\n  }\r\n}\r\n","const ArrayBars=(props)=>{\r\n    let style={\r\n        backgroundColor:`${props.unsortedColor}`,\r\n        height:`${props.value}px`,\r\n        width:`${props.width}px`,\r\n        display:\"absolute\",\r\n        margin:\"0 2px\",\r\n        marginTop:`${700-props.value}px`\r\n    }\r\n    return(\r\n        <div style={{display:'inline-block'}}>\r\n            <div style={style} className={props.class}></div>\r\n        </div>\r\n    )\r\n}\r\nexport default ArrayBars;","import { useEffect, useState } from \"react\";\r\nimport { getMergeSortAnimations } from \"../Algorithm/MergeSort\";\r\nimport { getBubbleSortAnimations } from \"../Algorithm/BubbleSort\";\r\nimport { getInsertionSortAnimations } from \"../Algorithm/InsertionSort\";\r\nimport { getQuickSortAnimations } from \"../Algorithm/QuickSort\";\r\nimport { getSelectionSortAnimations } from \"../Algorithm/SelectionSort\";\r\nimport ArrayBar from \"./ArrayBar/ArrayBar\";\r\nimport classes from \"./Visual.module.css\";\r\nconst UNSORTED_COLOR = \"deeppink\";\r\nconst UNSORTED_BORDER_COLOR = \"rgb(255, 201, 85)\";\r\nconst SORTED_COLOR = \"pink\";\r\nconst ACTIVE_COLOR = \"white\";\r\nconst Visual = () => {\r\n  const [array, setArray] = useState([]);\r\n  const [number, setNumber] = useState(100);\r\n  const [ANIMATION_SPEED_MS, setTime] = useState(7);\r\n  const [change, setChange] = useState(false);\r\n  const InputHandler = (event) => {\r\n    setChange(false);\r\n    let n = event.target.value;\r\n    if (n > 200) {\r\n      n = 200;\r\n    } else if (n < 20) {\r\n      n = 20;\r\n    }\r\n    setTime(8 - Math.floor(n / 100));\r\n    setNumber(n);\r\n  };\r\n  let screen = (window.screen.width / 100) * 75;\r\n  let w = Math.floor(screen / number) - 3;\r\n  useEffect(() => {\r\n    screen = (window.screen.width / 10) * 8;\r\n    w = Math.floor(screen / number) - 3;\r\n  }, [change]);\r\n\r\n  const resetArray = () => {\r\n    const array = [];\r\n    for (let i = 0; i < number; i++) {\r\n      array.push(randomNumber(5, 700));\r\n    }\r\n    setChange(true);\r\n    setArray(array);\r\n  };\r\n\r\n  const mergeSort = () => {\r\n    const animations = getMergeSortAnimations(array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        let color = i % 3 === 0 ? ACTIVE_COLOR : UNSORTED_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n          barOneStyle.marginTop = `${700 - newHeight}px`;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n    }\r\n  };\r\n\r\n  const quickSort = () => {\r\n    const animations = getQuickSortAnimations(array);\r\n    console.log(animations);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        if (arrayBars[barOneIdx] || arrayBars[barTwoIdx]) {\r\n          console.log(animations[i]);\r\n        }\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        let color = i % 3 === 0 ? ACTIVE_COLOR : UNSORTED_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n          barOneStyle.marginTop = `${700 - newHeight}px`;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n    }\r\n  };\r\n  const insertionSort = () => {\r\n    const animations = getInsertionSortAnimations(array);\r\n    console.log(animations);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        let color = i % 3 === 0 ? ACTIVE_COLOR : UNSORTED_COLOR;\r\n        let color1 = i % 3 === 0 ? ACTIVE_COLOR : UNSORTED_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color1;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n          barOneStyle.marginTop = `${700 - newHeight}px`;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n    }\r\n  };\r\n  const SelectionSort = () => {\r\n    const animations = getSelectionSortAnimations(array);\r\n    console.log(animations);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        let color = i % 3 === 0 ? ACTIVE_COLOR : UNSORTED_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n          barOneStyle.marginTop = `${700 - newHeight}px`;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n    }\r\n  };\r\n  const bubbleSort = () => {\r\n    const animations = getBubbleSortAnimations(array);\r\n    console.log(animations);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        let color = i % 3 === 0 ? ACTIVE_COLOR : UNSORTED_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n          barOneStyle.marginTop = `${700 - newHeight}px`;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.arrayContainer}>\r\n      <div className={classes.Bars}>\r\n        {change &&\r\n          array.map((value, idx) => {\r\n            return (\r\n              <ArrayBar\r\n                key={idx}\r\n                value={value}\r\n                unsortedColor={UNSORTED_COLOR}\r\n                border={UNSORTED_BORDER_COLOR}\r\n                width={w}\r\n                class=\"array-bar\"\r\n                style={{ verticalAlign: \"bottom\" }}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n      <div className={classes.sideBar}>\r\n        <h1 className={classes.font}>Sorting</h1>\r\n        <h2 className={classes.font}>Algorithm</h2>\r\n        <h2 style={{borderBottom:'2px solid deeppink'}} className={classes.font}>Visualizer</h2>\r\n        <h5 style={{marginLeft:'10px',marginTop:'20px',marginBottom:'-10px',color:'deeppink'}}>Number of Bars:</h5>\r\n        <input\r\n          type=\"number\"\r\n          max=\"200\"\r\n          min=\"20\"\r\n          onChange={InputHandler}\r\n          className={classes.Input}\r\n          placeholder={number}\r\n        ></input>\r\n        <h6 style={{marginLeft:'10px',marginTop:'-10px',color:'deeppink'}}>(min:20 max:200)</h6>\r\n        <button style={{margin:'20px 0',boxShadow:'none',borderBottom:'1px solid pink',borderTop:'1px solid pink',fontSize:'120%'}} className={classes.Button} onClick={resetArray}>\r\n          Generate New Array\r\n        </button>\r\n        <h3 style={{marginLeft:'10px',marginBottom:'1px',color:'deeppink'}}>Algorithms:</h3>\r\n        <button className={classes.Button} onClick={() => quickSort()}>\r\n          Quick Sort\r\n        </button>\r\n        <button className={classes.Button} onClick={mergeSort}>\r\n          Merge Sort\r\n        </button>\r\n        <button className={classes.Button} onClick={() => insertionSort()}>\r\n          Insertion Sort\r\n        </button>\r\n        <button className={classes.Button} onClick={() => SelectionSort()}>\r\n          Selection Sort\r\n        </button>\r\n        <button className={classes.Button} onClick={() => bubbleSort()}>\r\n          Bubble Sort\r\n        </button>\r\n        <a\r\n          style={{\r\n            textDecoration: \"none\",\r\n            textAlign: \"center\",\r\n            color: \"pink\",\r\n            fontWeight: \"bold\",\r\n            marginTop: \"15vh\",\r\n          }}\r\n          target=\"blank\"\r\n          href=\"https://github.com/harsh-sandhu\"\r\n        >\r\n          harsh-sandhu@GitHub\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\r\nfunction randomNumber(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nfunction arraysAreEqual(arrayOne, arrayTwo) {\r\n  if (arrayOne.length !== arrayTwo.length) return false;\r\n  for (let i = 0; i < arrayOne.length; i++) {\r\n    if (arrayOne[i] !== arrayTwo[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\nexport default Visual;\r\n","export function getInsertionSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  //   const auxiliaryArray = array.slice();\r\n  insertionSort(array, array.length, animations);\r\n  //   insertionSort(array,array.length,animations);\r\n  console.log(animations);\r\n  return animations;\r\n}\r\nfunction insertionSort(inputArr, n, animations) {\r\n  for (let i = 1; i < n; i++) {\r\n    // Choosing the first element in our unsorted subarray\r\n    let current = inputArr[i];\r\n    // The last element of our sorted subarray\r\n    let j = i - 1;\r\n    while (j > -1 && current < inputArr[j]) {\r\n      inputArr[j + 1] = inputArr[j];\r\n      animations.push([i, j]);\r\n      animations.push([i, j]);\r\n      animations.push([j, inputArr[j]]);\r\n      j--;\r\n    }\r\n    inputArr[j + 1] = current;\r\n    animations.push([i, n-1]);\r\n    animations.push([i, n-1]);\r\n    animations.push([i, inputArr[i]]);\r\n  }\r\n  animations.push([0, 0]);\r\n    animations.push([0, 0]);\r\n    animations.push([0, inputArr[0]]);\r\n}\r\n","export function getSelectionSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  selectionSort(array, array.length, animations);\r\n  return animations;\r\n}\r\nfunction selectionSort(inputArr, n, animations) {\r\n  for (let i = 0; i < n; i++) {\r\n    // Finding the smallest number in the subarray\r\n    let min = i;\r\n    for (let j = i + 1; j < n; j++) {\r\n        animations.push([i, j]);\r\n        animations.push([i, j]);\r\n        animations.push([min, inputArr[min]]);\r\n      if (inputArr[j] < inputArr[min]) {\r\n        min = j;\r\n        animations.push([i, j]);\r\n        animations.push([i, j]);\r\n        animations.push([min, inputArr[min]]);\r\n      }\r\n    }\r\n    if (min != i) {\r\n      // Swapping the elements\r\n      let tmp = inputArr[i];\r\n      inputArr[i] = inputArr[min];\r\n      inputArr[min] = tmp;\r\n      animations.push([i, min]);\r\n      animations.push([i, min]);\r\n      animations.push([i, inputArr[i]]);\r\n    }\r\n  }\r\n  animations.push([n-1, n-1]);\r\n  animations.push([n-1, n-1]);\r\n  animations.push([n-1, inputArr[n-1]]);\r\n}\r\n","import Visual from './Components/Visuals/Visual'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Visual/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrayContainer\":\"Visual_arrayContainer__3z7HM\",\"Bars\":\"Visual_Bars__3E6TT\",\"sideBar\":\"Visual_sideBar__2YoQu\",\"Button\":\"Visual_Button__1qeji\",\"font\":\"Visual_font__3Vrm7\",\"Input\":\"Visual_Input__1Sa6u\"};"],"sourceRoot":""}